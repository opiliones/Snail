
==================== FINAL INTERFACE ====================
2019-07-10 12:49:41.285417107 UTC

interface snale-0.1.0.0-L0Exq3hUWYA2PScQIREQWH:Paths_snale 8044
  interface hash: ebaf7e1ed6eb037809fdb0ecaffe5f65
  ABI hash: 16ad97a64f54dd557e7d0f42fe7d9a70
  export-list hash: da31a3357a4c1ecc79bea3953e140994
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 72621d698ef0939281be75fd58e3a4ef
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_snale.getBinDir
  Paths_snale.getDataDir
  Paths_snale.getDataFileName
  Paths_snale.getDynLibDir
  Paths_snale.getLibDir
  Paths_snale.getLibexecDir
  Paths_snale.getSysconfDir
  Paths_snale.version
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Control.Exception 3d8e6cda20877f889f07bc7c0f5cac36
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.IO.Exception acc060dca2e46d8b8275d06ee7d5d60d
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 06420d98d10ee04b8dda9c0d88032c55
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
addDependentFile "/home/tks/.stack/programs/x86_64-linux/ghc-8.4.4/lib/ghc-8.4.4/include/ghcversion.h" dc95dadad7fc31af17d70482a2bf3d6d
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.2.0.1/build/autogen/cabal_macros.h" 90cae8a3db51f7393f89d30e420e6d10
addDependentFile "/usr/include/stdc-predef.h" 64086a4476ea583071277345b423d741
b07e4f2c459a607c8c02c2375aaef7de
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_snale.$trModule3
                   Paths_snale.$trModule1) -}
439dc50009e51a77d284bb4936458598
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_snale.$trModule2) -}
b8f8371df3e39a14f42279028d4a2aa6
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_snale"#) -}
cd5e31db410377665d0328448e2a29c3
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_snale.$trModule4) -}
cd826efe4e684152121622327275d302
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("snale-0.1.0.0-L0Exq3hUWYA2PScQIREQWH"#) -}
6c4a71dfeba59f48724f282a11dd7a30
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_snale.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
899fc2a306895db07daace58a97fbb29
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_snale.getBinDir5
                   Paths_snale.getBinDir2
                   eta) -}
0e20815df5fbba22b7fb7b2ce22a0330
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_snale.getBinDir3 #) } } } } }) -}
cabcaee3ddebcaaa9602cc01d671ed2d
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getBinDir4) -}
bb5a5d8a2cde9f40ce6d964e03db2b0e
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/tks/Snale/.stack-work/install/x86_64-linux/lts-12.16/8.4.4/bin"#) -}
a3e8db66d20b7c67d53538ad0f9b5462
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_snale.getBinDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_snale.getBinDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
e454b9c426a169c7b2d99cece5c24b13
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getBinDir7) -}
8a90e40f986f28abbd89188ce6106994
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("snale_bindir"#) -}
738e26d7909f1271942e27703d4d0189
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_snale.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
ba0a887115865ca087607ae60cc36864
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_snale.getDataDir5
                   Paths_snale.getDataDir2
                   eta) -}
552cb73305ca5b1ecdbc66a7b8516675
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_snale.getDataDir3 #) } } } } }) -}
3ce300bfa4de8f4a4d96474c4f8f83da
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getDataDir4) -}
9410c5af744b6903a585d394b4ea01af
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/tks/Snale/.stack-work/install/x86_64-linux/lts-12.16/8.4.4/share/x86_64-linux-ghc-8.4.4/snale-0.1.0.0"#) -}
f6bb199140127382aeb52b573d714a07
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_snale.getDataDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_snale.getDataDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
2bdd11f6cca1f358d3ef775c34fa428c
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getDataDir7) -}
189571e7186243f176079b4615f711af
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("snale_datadir"#) -}
aca4d8b7c4032cf73fa51d55f259928e
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_snale.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
aa44e6f56465bbc4bcae90129e0292c9
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_snale.getDataDir5
                        Paths_snale.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_snale.getDataFileName2
                         name) #) }) -}
6f7607ab5dfaa3aff233a4d7398d2025
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
e19ebe1614fb67bb35313accd7df3ff2
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_snale.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
5aa12c571d3dee316d6316ff054548cb
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_snale.getDynLibDir5
                   Paths_snale.getDynLibDir2
                   eta) -}
212cdf0d33ea2d2742395eb492cf777c
  getDynLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_snale.getDynLibDir3 #) } } } } }) -}
2217bc9a05c4cbd60e2ae62f16839ca9
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getDynLibDir4) -}
c095f20da74d30e86a6528e356b5f784
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/tks/Snale/.stack-work/install/x86_64-linux/lts-12.16/8.4.4/lib/x86_64-linux-ghc-8.4.4"#) -}
1e86cbb49184340a71b98f43bd24a357
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_snale.getDynLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_snale.getDynLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
d9096a868c0e77eb98210af1b9c262cb
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getDynLibDir7) -}
e9228a361b87b1316c69f190e7273f02
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("snale_dynlibdir"#) -}
bb7200fa4c38aada8c709f1234824d6d
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_snale.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
4ac362dfa41737b016ad26d9d3a9d858
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_snale.getLibDir5
                   Paths_snale.getLibDir2
                   eta) -}
e969fd7aa26d703582316193dc7f0490
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_snale.getLibDir3 #) } } } } }) -}
7883c5b0189d6cd3916f9fe46246ccd3
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getLibDir4) -}
57d0e5e24ae4723e63068ae68be8ee63
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/tks/Snale/.stack-work/install/x86_64-linux/lts-12.16/8.4.4/lib/x86_64-linux-ghc-8.4.4/snale-0.1.0.0-L0Exq3hUWYA2PScQIREQWH"#) -}
2e1f73fd7414d54ca717539de15f6c92
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_snale.getLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_snale.getLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
780043084776d44697e33f602c1b31d8
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getLibDir7) -}
e3599622268a6403de755b34bc792095
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("snale_libdir"#) -}
d989c72405e0334184958b030479a77c
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_snale.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
48317eafe36d80bac8a74029b5ced6ae
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_snale.getLibexecDir5
                   Paths_snale.getLibexecDir2
                   eta) -}
9137139a52694c92994d3a6066e82f72
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_snale.getLibexecDir3 #) } } } } }) -}
6d9846a5d318d0e6a246a90c64dfe7bb
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getLibexecDir4) -}
fc9d43e760e8dbcff80526899634b1ba
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/tks/Snale/.stack-work/install/x86_64-linux/lts-12.16/8.4.4/libexec/x86_64-linux-ghc-8.4.4/snale-0.1.0.0"#) -}
c19ebfd41ab0bbc88525dcc382463ca0
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_snale.getLibexecDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_snale.getLibexecDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
7aebe9f3c1b5df7158bd35dbc6c021bd
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getLibexecDir7) -}
6dd641e89bf595a8cc3ff9e9e9cfa949
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("snale_libexecdir"#) -}
b0dc82ac473315cae049a5d4727b7e73
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_snale.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
24ae31fd32ca60de8eef4cfbac8862c7
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_snale.getSysconfDir5
                   Paths_snale.getSysconfDir2
                   eta) -}
a512c833cb700dcf7e803156a8c1fdb2
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_snale.getSysconfDir3 #) } } } } }) -}
d98214019e8dc79b38a2181bb21fd5e5
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getSysconfDir4) -}
b10517b30b4d9e228c6b4be6b5f1e8bd
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/tks/Snale/.stack-work/install/x86_64-linux/lts-12.16/8.4.4/etc"#) -}
7a1c0fc91516e773fd84c3acd2fdb8c0
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_snale.getSysconfDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_snale.getSysconfDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
47fb0d316d7f46f1e966752982d78589
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_snale.getSysconfDir7) -}
acacda4144af33388455dabc7544f7e1
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("snale_sysconfdir"#) -}
ae13ad468c25b306a4209d90487ecc8f
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_snale.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
bc275db6ecbafa39eb5f110c7c687535
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_snale.version5
                   Paths_snale.version2) -}
36491952dc6b6f49b184aff51ae9b9dc
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_snale.version6
                   Paths_snale.version3) -}
df0f798e098bd8443f3d8740617a8062
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_snale.version5
                   Paths_snale.version4) -}
cd93c05288fd71170f155998f9a477fb
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_snale.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
40ef82daa10a5e0397d86ab219f1a3bc
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
ef97189c6c39f2bc432bdaf0880c83ce
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

